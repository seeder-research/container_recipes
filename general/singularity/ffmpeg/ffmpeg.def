BootStrap: localimage
From: pre.sif

%files
modfile    /opt

%post
. /etc/profile
export MODULEPATH=/usr/local/modulefiles:/usr/local/modulefiles/dev
export HOME_BASE=/usr/local
export APPVER_MAJ=5
export APPVER_MIN=1
export APPVER_REV=2
export APPVER=${APPVER_MAJ}.${APPVER_MIN}.${APPVER_REV}
export APPNAME=ffmpeg
export APPURL="https://github.com/FFmpeg/FFmpeg"
export APPROOT=${HOME_BASE}/${APPNAME}/${APPVER}
export LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:$LD_LIBRARY_PATH
export LIBRARY_PATH=/usr/local/cuda/lib64/stubs:$LIBRARY_PATH
export LD_RUN_PATH=/usr/local/cuda/lib64/stubs:$LD_RUN_PATH
if [ ! -d ${HOME_BASE}/modulefiles/dev/${APPNAME} ]; then
    mkdir -p ${HOME_BASE}/modulefiles/dev/${APPNAME}
fi
if [ ! -f ${HOME_BASE}/modulefiles/dev/${APPNAME}/${APPVER} ]; then
    if [ -f /opt/modfile ]; then
        mv /opt/modfile \
            ${HOME_BASE}/modulefiles/dev/${APPNAME}/${APPVER}
    fi
fi
if [ ! -f ${HOME_BASE}/modulefiles/dev/${APPNAME}/.version ]; then
    echo "#%Module" > ${HOME_BASE}/modulefiles/dev/${APPNAME}/.version && \
    echo set ModulesVersion "${APPVER}" >> ${HOME_BASE}/modulefiles/dev/${APPNAME}/.version
fi
cp /usr/local/cuda/lib64/stubs/libnvidia-ml.so /usr/local/cuda/lib64/stubs/libnvidia-ml.so.1 && \
module load \
  openmpi \
  nasm \
  ffmpeg &&\
mkdir -p ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
git clone --depth 1 https://code.videolan.org/videolan/x264.git -b stable && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/x264 && \
./configure --prefix="${APPROOT}" --enable-static --enable-pic --disable-opencl && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
rm -rf ${HOME_BASE}/${APPNAME}/ffmpeg_src/x264 && \
git clone --depth 1 https://code.videolan.org/videolan/x264.git -b stable && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/x264 && \
./configure --prefix="${APPROOT}" --enable-shared --disable-opencl && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
hg clone http://hg.videolan.org/x265 && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/x265 && \
hg up "stable" && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/x265/build/linux && \
cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="${APPROOT}" -DENABLE_SHARED=off ../../source && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
rm -rf ${HOME_BASE}/${APPNAME}/ffmpeg_src/x265 && \
hg clone http://hg.videolan.org/x265 && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/x265 && \
hg up "stable" && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/x265/build/linux && \
cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="${APPROOT}" -DENABLE_SHARED=on ../../source && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git -b v1.12.0 && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/libvpx && \
./configure --prefix="${APPROOT}" --enable-shared --enable-static --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
git clone --depth 1 https://github.com/mstorsjo/fdk-aac -b v2.0.2 && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/fdk-aac && \
autoreconf -fiv && \
./configure --prefix="${APPROOT}" --disable-shared && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
rm -rf ${HOME_BASE}/${APPNAME}/ffmpeg_src/fdk-aac && \
git clone --depth 1 https://github.com/mstorsjo/fdk-aac -b v2.0.2 && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/fdk-aac && \
autoreconf -fiv && \
./configure --prefix="${APPROOT}" --enable-shared && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
wget -O ${HOME_BASE}/${APPNAME}/lame-3.100.tar.gz https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz && \
tar xzvf ${HOME_BASE}/${APPNAME}/lame-3.100.tar.gz && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/lame-3.100 && \
./configure --prefix="${APPROOT}" --disable-shared --enable-nasm && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
rm -rf ${HOME_BASE}/${APPNAME}/ffmpeg_src/lame-3.100 && \
tar xzvf ${HOME_BASE}/${APPNAME}/lame-3.100.tar.gz && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/lame-3.100 && \
./configure --prefix="${APPROOT}" --enable-shared --enable-nasm && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
git clone --depth 1 https://github.com/xiph/opus.git -b v1.3.1 && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/opus && \
./autogen.sh && \
./configure --prefix="${APPROOT}" --disable-shared && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
rm -rf ${HOME_BASE}/${APPNAME}/ffmpeg_src/opus && \
git clone --depth 1 https://github.com/xiph/opus.git -b v1.3.1 && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/opus && \
./autogen.sh && \
./configure --prefix="${APPROOT}" --enable-shared && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
git clone --depth 1 https://aomedia.googlesource.com/aom -b v3.5.0 && \
mkdir -p ${HOME_BASE}/${APPNAME}/ffmpeg_src/aom_build_static && \
mkdir -p ${HOME_BASE}/${APPNAME}/ffmpeg_src/aom_build_shared && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/aom_build_static && \
cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="${APPROOT}" -DBUILD_SHARED_LIBS=OFF -DAOM_C_FLAGS=-fPIC -DAOM_CXX_FLAGS=-fPIC -DENABLE_NASM=on ${HOME_BASE}/${APPNAME}/ffmpeg_src/aom && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/aom_build_shared && \
cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="${APPROOT}" -DBUILD_SHARED_LIBS=ON -DAOM_C_FLAGS=-fPIC -DAOM_CXX_FLAGS=-fPIC -DENABLE_NASM=on ${HOME_BASE}/${APPNAME}/ffmpeg_src/aom && \
make -j$(nproc) && \
make install && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src && \
git clone \
  --recursive \
  ${APPURL} \
  -b n${APPVER} \
  ${HOME_BASE}/${APPNAME}/ffmpeg_src/${APPNAME}-${APPVER} && \
cd ${HOME_BASE}/${APPNAME}/ffmpeg_src/${APPNAME}-${APPVER} && \
./configure \
  --prefix="${APPROOT}" \
  --pkg-config-flags="--static" \
  --extra-cflags="-I${APPROOT}/include" \
  --extra-ldflags="-L${APPROOT}/lib" \
  --extra-libs="-lpthread -lm" \
  --enable-gpl \
  --enable-libaom \
  --enable-libass \
  --enable-libfdk-aac \
  --enable-libfreetype \
  --enable-libmp3lame \
  --enable-libopus \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libx264 \
  --enable-libx265 \
  --enable-openssl \
  --enable-shared \
  --enable-static \
  --enable-nonfree && \
make -j$(nproc) && \
make install && \
rm -rf \
  ${HOME_BASE}/${APPNAME}/lame-3.100.tar.gz \
  /usr/local/cuda/lib64/stubs/libnvidia-ml.so.1 \
  ${HOME_BASE}/${APPNAME}/ffmpeg_src
